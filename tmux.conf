# Ctrl-s prefix key. Default => C-b. Send C-s with repeat option via C-s C-s
unbind C-b
set -g prefix C-s
bind-key -r C-s send-prefix

# 1 based index (instead of 0) to navigate windows
set -g base-index 1
set-option -g renumber-windows on

# Make Vim responsive to esc
set -s escape-time 10

#Mouse mode
set -g mouse on

#improve colors
set -g default-terminal "screen-256color"

# Keep plenty of history for scrollback
set -g history-limit 10000

# vim emulation is not optimal. use emacs which gives more regular terminal like key commands
set-option -g status-keys "emacs"


# Smart pane switching with awareness of vim splits
# See this blog post for additional detail:
# http://robots.thoughtbot.com/post/53022241323/seamlessly-navigate-vim-and-tmux-splits
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"


setw -g automatic-rename off

source-file ~/dotfiles/tmux/dark_status.conf
# reload the .tmux conf file
bind r source-file ~/.tmux.conf \; source-file ~/dotfiles/tmux/dark_status.conf \; display "Reloaded"


set -g @plugin 'tmux-plugins/tmux-online-status'
set -g @online_icon " "
set -g @offline_icon ☠️

set -g status-right-length 40
#set -g status-right "pane: #P --#{online_status} --  #(date '+%d-%m-%y %H:%M') "
set -g status-right "#{online_status} #[fg=red]#(~/dotfiles/bin/battery Discharging)#[fg=green]#(~/dotfiles/bin/battery Charging)  #[fg=$TMUX_SHELL_COLOR]$sHost#[default] %d %b %R"

set -g status-left-length 32
set -g status-left ""
set -g window-status-format "#I #W"
set -g status-justify "centre"

# split window with sane defaults starting in the current path
bind-key - split-window -v -p 20 -c '#{pane_current_path}'
bind-key \ split-window -h -p 40 -c '#{pane_current_path}'
# 80/20 split
#bind-key C-t split-window -p 20 -c "#{pane_current_path}"

# Fine adjustment (1 or 2 cursor cells per bump)
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1

# Coarse adjustment (5 or 10 cursor cells per bump)
bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Down resize-pane -D 5
bind -n C-Up resize-pane -U 5

# open new window ctrl-s c and start in the current path
bind c new-window -c '#{pane_current_path}'

bind-key b break-pane -d

# choose nerdtree like between session and windows
bind-key C-j choose-tree



# Use vim keybindings in copy mode
setw -g mode-keys vi

bind-key -Tcopy-mode-vi 'v' send -X begin-selection
bind-key -Tcopy-mode-vi 'y' send -X copy-selection

bind-key h split-window -h "htop"

# Open a new pane and tail dev log
#bind-key l split-window -h "tail -f  log/development.log"

# Break out a session
bind-key C-b send-keys 'tat && exit' 'C-m'

# kill session but stay in tmux with ctrl-k
bind-key K run-shell 'tmux switch-client -n \; kill-session -t "$(tmux display-message -p "#S")" || tmux kill-session'

# Prompted join-pane
bind-key j command-prompt -p "join pane from: "  "join-pane -h -s '%%'"
# Easily swap a pane (targeted by pane number) with the current pane
bind-key s display-panes\; command-prompt -p "pane #: "  "swap-pane -t '%%'"

# Easily move windows from left to right with ctrl+shift+(left|right)

bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1



#Reattach to user-namespec for vim
set-option -g default-command "reattach-to-user-namespace -l $SHELL"

# Quick access to todo file
bind t split-window -v -c '#{pane_current_path}'
#Quick access to notes
bind N split-window -h -c ~/notes "reattach-to-user-namespace vim ."
#Quick access to vimrc
bind V split-window -h -c ~/dotfiles "reattach-to-user-namespace vim vimrc"


# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-online-status'


# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

